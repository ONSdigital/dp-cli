package handlers

import (
	"net/http"

	"github.com/ONSdigital/{{.Name}}/config"
	"github.com/ONSdigital/{{.Name}}/mapper"
	dphandlers "github.com/ONSdigital/dp-net/handlers"
	"github.com/ONSdigital/log.go/v2/log"
)

func setStatusCode(req *http.Request, w http.ResponseWriter, err error) {
	status := http.StatusInternalServerError
	if err, ok := err.(ClientError); ok {
		if err.Code() == http.StatusNotFound {
			status = err.Code()
		}
	}
	log.Error(req.Context(), "setting-response-status", err)
	w.WriteHeader(status)
}

// TODO: remove hello world example handler and template file
// HelloWorld Handler
func HelloWorld(cfg *config.Config, renderer RenderClient) http.HandlerFunc {
	return dphandlers.ControllerHandler(func(w http.ResponseWriter, req *http.Request, language, collectionID, accessToken string) {
		helloWorld(w, req, cfg, renderer, language)
	})
}

func helloWorld(w http.ResponseWriter, req *http.Request, cfg *config.Config, renderer RenderClient, language string) {
	ctx := req.Context()
	greetingsModel := mapper.HelloModel{Greeting: "Hello", Who: "World"}
	basePageModel := renderer.NewBasePageModel()
	m := mapper.CreateHelloWorldPage(ctx, req, cfg, basePageModel, greetingsModel, language)
	renderer.BuildPage(w, m, "hello-world")
}
